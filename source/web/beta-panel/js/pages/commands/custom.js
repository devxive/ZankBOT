$(run=function(){socket.getDBValue('custom_command_module','modules','./commands/customCommands.js',function(e){if(!helpers.getModuleStatus('customCommandsModule',e.modules)){return}
socket.getDBTableValues('commands_get_custom','command',function(results){let tableData=[];for(let i=0;i<results.length;i++){tableData.push(['!'+results[i].key,results[i].value,$('<div/>',{'class':'btn-group'}).append($('<button/>',{'type':'button','class':'btn btn-xs btn-danger','style':'float: right','data-command':results[i].key,'html':$('<i/>',{'class':'fa fa-trash'})})).append($('<button/>',{'type':'button','class':'btn btn-xs btn-warning','style':'float: right','data-command':results[i].key,'html':$('<i/>',{'class':'fa fa-edit'})})).html()])}
if($.fn.DataTable.isDataTable('#customCommandsTable')){$('#customCommandsTable').DataTable().destroy();$('#customCommandsTable').off()}
let table=$('#customCommandsTable').DataTable({'searching':!0,'autoWidth':!1,'lengthChange':!1,'data':tableData,'columnDefs':[{'className':'default-table','orderable':!1,'targets':2},{'width':'15%','targets':0}],'columns':[{'title':'Command'},{'title':'Response'},{'title':'Actions'}]});table.on('click','.btn-danger',function(){let command=$(this).data('command'),row=$(this).parents('tr');socket.removeDBValues('custom_command_remove',{tables:['command','permcom','cooldown','aliases','pricecom','paycom'],keys:[command,command,command,command,command,command]},function(){socket.wsEvent('custom_command_remove_ws','./commands/customCommands.js',null,['remove',command],function(){table.row(row).remove().draw(!1);toastr.success('Successfully removed command !'+command)})})});table.on('click','.btn-warning',function(){let command=$(this).data('command'),t=$(this);socket.getDBValues('custom_command_edit',{tables:['command','permcom','cooldown','pricecom','paycom'],keys:[command,command,command,command,command]},function(e){let cooldownJson=(e.cooldown===null?{isGlobal:'true',seconds:0}:JSON.parse(e.cooldown));helpers.getAdvanceModal('edit-command','Edit Command','Save',$('<form/>',{'role':'form'}).append(helpers.getInputGroup('command-name','text','Command','','!'+command,'Name of the command. This cannot be edited.',!0)).append(helpers.getTextAreaGroup('command-response','text','Response','',e.command,'Response of the command.')).append(helpers.getDropdownGroup('command-permission','User Level',helpers.getGroupNameById(e.permcom),['Caster','Administrators','Moderators','Subscribers','Donators','Hosters','Regulars','Viewers'])).append($('<div/>',{'class':'collapse','id':'advance-collapse','html':$('<form/>',{'role':'form'}).append(helpers.getInputGroup('command-cost','number','Cost','0',helpers.getDefaultIfNullOrUndefined(e.pricecom,'0'),'Cost in points that will be taken from the user when running the command.')).append(helpers.getInputGroup('command-reward','number','Reward','0',helpers.getDefaultIfNullOrUndefined(e.paycom,'0'),'Reward in points the user will be given when running the command.')).append(helpers.getInputGroup('command-cooldown','number','Cooldown','5',cooldownJson.seconds,'Cooldown of the command in seconds.').append(helpers.getCheckBox('command-cooldown-global',cooldownJson.isGlobal==='true','Global','If checked the cooldown will be applied to everyone in the channel. When not checked, the cooldown is applied per-user.')))})),function(){let commandName=$('#command-name'),commandResponse=$('#command-response'),commandPermission=$('#command-permission'),commandCost=$('#command-cost'),commandReward=$('#command-reward'),commandCooldown=$('#command-cooldown'),commandCooldownGlobal=$('#command-cooldown-global').is(':checked');commandName.val(commandName.val().replace(/(\!|\s)/g,'').toLowerCase());switch(!1){case helpers.handleInputString(commandName):case helpers.handleInputString(commandResponse):case helpers.handleInputNumber(commandCost):case helpers.handleInputNumber(commandReward):case helpers.handleInputNumber(commandCooldown):break;default:socket.updateDBValues('custom_command_edit',{tables:['pricecom','permcom','paycom','command'],keys:[commandName.val(),commandName.val(),commandName.val(),commandName.val()],values:[commandCost.val(),helpers.getGroupIdByName(commandPermission.find(':selected').text(),!0),commandReward.val(),commandResponse.val()]},function(){socket.wsEvent('custom_command_edit_ws','./commands/customCommands.js',null,['edit',commandName.val(),commandResponse.val()],function(){socket.wsEvent('custom_command_edit_cooldown_ws','./core/commandCoolDown.js',null,['add',commandName.val(),commandCooldown.val(),String(commandCooldownGlobal)],function(){t.parents('tr').find('td:eq(1)').text(commandResponse.val());$('#edit-command').modal('hide');toastr.success('Successfully edited command !'+commandName.val())})})})}}).modal('toggle')})})})})});$(function(){$('#customCommandsModuleToggle').on('change',function(){socket.sendCommandSync('custom_commands_module_toggle_cmd','module '+($(this).is(':checked')?'enablesilent':'disablesilent')+' ./commands/customCommands.js',run)});$('#addcom-button').on('click',function(){helpers.getAdvanceModal('add-command','Add Command','Save',$('<form/>',{'role':'form'}).append(helpers.getInputGroup('command-name','text','Command','!example')).append(helpers.getTextAreaGroup('command-response','text','Response','Response example!')).append(helpers.getDropdownGroup('command-permission','User Level','Viewers',['Caster','Administrators','Moderators','Subscribers','Donators','Hosters','Regulars','Viewers'])).append($('<div/>',{'class':'collapse','id':'advance-collapse','html':$('<form/>',{'role':'form'}).append(helpers.getInputGroup('command-cost','number','Cost','0','0','Cost in points that will be taken from the user when running the command.')).append(helpers.getInputGroup('command-reward','number','Reward','0','0','Reward in points the user will be given when running the command.')).append(helpers.getInputGroup('command-cooldown','number','Cooldown','0','5','Cooldown of the command in seconds.').append(helpers.getCheckBox('command-cooldown-global',!0,'Global','If checked the cooldown will be applied to everyone in the channel. When not checked, the cooldown is applied per-user.')))})),function(){let commandName=$('#command-name'),commandResponse=$('#command-response'),commandPermission=$('#command-permission'),commandCost=$('#command-cost'),commandReward=$('#command-reward'),commandCooldown=$('#command-cooldown'),commandCooldownGlobal=$('#command-cooldown-global').is(':checked');commandName.val(commandName.val().replace(/(\!|\s)/g,'').toLowerCase());switch(!1){case helpers.handleInputString(commandName):case helpers.handleInputString(commandResponse):case helpers.handleInputNumber(commandCost):case helpers.handleInputNumber(commandReward):case helpers.handleInputNumber(commandCooldown):break;default:socket.getDBValue('custom_command_exists','permcom',commandName.val(),function(e){if(e.permcom!==null){toastr.error('Failed to add command as it already exists.');return}
socket.updateDBValues('custom_command_add',{tables:['pricecom','permcom','paycom','command'],keys:[commandName.val(),commandName.val(),commandName.val(),commandName.val()],values:[commandCost.val(),helpers.getGroupIdByName(commandPermission.find(':selected').text(),!0),commandReward.val(),commandResponse.val()]},function(){socket.wsEvent('custom_command_add_ws','./commands/customCommands.js',null,['add',commandName.val(),commandResponse.val()],function(){socket.wsEvent('custom_command_cooldown_ws','./core/commandCoolDown.js',null,['add',commandName.val(),commandCooldown.val(),String(commandCooldownGlobal)],function(){run();$('#add-command').modal('hide');toastr.success('Successfully added command !'+commandName.val())})})})})}}).modal('toggle')});window.location.hash='#'})